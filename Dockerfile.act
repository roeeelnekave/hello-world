FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS builder

WORKDIR /src

COPY ["App/App.csproj", "App/"]

# Restore NuGet packages early to leverage Docker layer caching
RUN dotnet restore "App/App.csproj"

COPY . .

# Publish the application without generating a native host (smaller image)
RUN dotnet publish ./App/App.csproj -c Release -o /app/publish /p:UseAppHost=false

FROM mcr.microsoft.com/dotnet/runtime:8.0-alpine

# Create non-root user and group for secure runtime execution
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup -h /app -s /sbin/nologin

WORKDIR /app

# Copy published output with proper ownership for non-root user
COPY --from=builder --chown=1001:1001 /app/publish .

# Restrict permissions to enforce read-only runtime
RUN chmod -R 555 /app && \
    find /app -type f -name "*.dll" -exec chmod 444 {} \; && \
    find /app -type f -name "*.json" -exec chmod 444 {} \;

ARG VERSION

# Add standard OCI image metadata
LABEL org.opencontainers.image.version="${VERSION:-1.0.0}" \
      org.opencontainers.image.title="Hello World .NET App" \
      org.opencontainers.image.description="Secure Hello World application" \
      org.opencontainers.image.vendor="roeeelnekave" 

# Drop root privileges
USER 1001:1001

# Start the application
ENTRYPOINT ["dotnet", "App.dll"]

CMD []